{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/CODE/React Course/events-react-router/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  console.log(events);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","data","events","console","log","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/andrey/Desktop/CODE/React Course/events-react-router/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useLoaderData } from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\n\nconst EventDetail = () => {\n  const data = useLoaderData();\n  const events = data.events;\n  console.log(events);\n\n  return (\n    <>\n      <EventItem event={events} />\n    </>\n  );\n};\n\nexport default EventDetail;\n\nexport const loader = async ({ request, params }) => {\n  const id = params.eventId;\n\n  const response = await fetch('http://localhost:8080/events/' + id);\n\n  if (!response.ok) {\n    throw json({ message: 'Could not fetch details for selected event.' }, { status: 500 });\n  } else {\n    return response;\n  }\n};\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAEtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACF,SAAS;MAACY,KAAK,EAAEJ;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC5B,CAAC;AAEP,CAAC;AAACV,EAAA,CAVID,WAAW;EAAA,QACFN,aAAa;AAAA;AAAAkB,EAAA,GADtBZ,WAAW;AAYjB,eAAeA,WAAW;AAE1B,OAAO,MAAMa,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACnD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM3B,IAAI,CAAC;MAAE4B,OAAO,EAAE;IAA8C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACzF,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}